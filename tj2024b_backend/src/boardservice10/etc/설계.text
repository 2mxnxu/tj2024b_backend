[boardservice10]
주제 : 회원제 커뮤니티

	1. 주제선정
	2. 주요기능들 : 회원기능, 계층(카테고리/댓글)형 게시물기능
	3. 세부구현기능들
		- 회원기능 	: 회원가입, 로그인, 아이디/비밀번호 찾기, 내정보, 회원탈퇴
		- 게시물기능 	: 쓰기, 전체조회, 개별조회, 수정, 삭제
		- 댓글기능 	: 쓰기, 현재게시물댓글 조회, 댓글수정, 댓글삭제
	4. 화면 flow chart 
	5. DB 설계와 샘플(스프레드시트) --> DB/Table SQL -> SAMPLE INSERT -> ERD다이어그램
		* 저장 데이터 파악
			회원 : 회원번호PK, 아이디, 비밀번호, 이름, 연락처, 가입일
			카테고리 : 카테고리번호PK, 카테고리명, 작성일
			게시물 : 카테고리번호, 카테고리명, 작성일, 회원번호FK, 카테고리명
			댓글 : 댓글번호PK, 내용, 작성일, 회원번호FK
			
		1. 데이터들 간의 관계 파악 , 1:1, 1:M, M:M
		2. 테이블당 PK(식별키) 1개 이상 권장
		(회원)회원번호PK -- 		(게시물)회원번호FK[작성자 역할]
		(회원)회원번호PK -- 		(댓글)회원번호FK[작성자 역할]
		(카테고리)카테고리번호PK -- 	(게시물)카테고리번호FK[카테고리명 역할]
		(게시물)게시물번호PK -- 		(댓글)게시물번호FK[댓글위치 역할]
		
	6. REST API 명세서(스프레드시트) : Controller 매개변수/리턴값 정의서
	7. JAVA 프로젝트 세팅 : 1.패키지구성 2.클래스구성 3. 싱글톤 구성 4.DB연동코드 5.DTO생성 6. AppStart
	8 기능별 VIEW - CONTROLLER - DAO
		0. 구현할 기능의 DTO 만들기
		- VIEW[사용자] <-----------DTO------------> DB[저장소]
														CRUD	DML
		1. 회원가입 view - 회원가입 controller - 회원가입dao	C		insert
		2. 아이디찾기 view - controller - dao				R		select
		3. 비밀번호찾기 view - controller - dao				R		select
		4. 로그인 view - controller - dao					R		select
		5. 로그아웃 view - controller - dao				로직		x
		6. 내정보조회 view - controller - dao				R		select
		7. 회원탈퇴 view - controller - dao				D		delete, 
		8. 회원수정 view - controller - dao				U		update
		9. 전체게시물조회 : view -> controller - dao			R		select
		10. 개별게시물조회 : view -> controller - dao		R		select
				
		* 디자인 패턴이란 : 프로그래밍 설계 과정에서 자주 발생되는 문제점을 해결 하는 설계 방법 제시
		
		